const pkg = require('../package.json')
const childProcess = require('child_process')
const commitCount = 'git rev-list HEAD --count'

exports.getCommitCount = function () {
  return new Promise((resolve, reject) => {
    const sub = childProcess.exec(commitCount)
    sub.stdout.on('data', function (data) {
      resolve(parseFloat(data))
    })
    sub.stderr.on('data', function (data) {
      reject(Error(data))
    })
  })
}

exports.getUpdatedVersion = function (commitCount) {
  if(!Number.isFinite(commitCount)){
    throw Error(`Invalid commit count: ${commitCount}`);
  }
  const versions = pkg.version.split('.')
  const buildVersionIndex = versions.length - 1
  const versionBuild = parseFloat(versions[buildVersionIndex])
  versions[buildVersionIndex] = Math.max(versionBuild, commitCount)
  return versions.join('.')
}

exports.getBuildTsContent = function (version) {
  return `// Do not edit. This file was generated by build scripts.
export const VERSION = '${version}';
`
}

